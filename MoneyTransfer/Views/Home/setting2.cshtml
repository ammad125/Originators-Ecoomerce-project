@model MoneyTransfer.Database.signup_table
@{
    ViewBag.Title = "setting2";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<!doctype html>
<html class="no-js" lang="en">

<head>
    <meta charset="utf-8">
    <meta http-equiv="x-ua-compatible" content="ie=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1">

    <link rel="shortcut icon" type="image/x-icon" href="img/logo/favicon.ico">

    <link rel="stylesheet" href="css/bootstrap.min.css">
    <link rel="stylesheet" href="css/themify-icons.css">
    <link rel="stylesheet" href="style.css">
    <link rel="stylesheet" href="css/responsive.css">

    <script src="js/vendor/modernizr-2.8.3.min.js"></script>

    <style>
        /* The message box is shown when the user clicks on the password field */
        #message {
            display: none;
            /*background: #1d7d7d;*/
            color: #000;
            position: relative;
            padding: 20px;
            margin-top: 320px;
            text-align: center;
            width: 100%;
            /*margin: 318px 240px 0px 0px;*/
            margin: 5px 240px 0px 60px;
        }

            #message p {
                padding: 10px 35px;
                font-size: 18px;
            }

        /* Add a green text color and a checkmark when the requirements are right */
        .valid {
            color: green;
        }

            .valid:before {
                position: relative;
                left: -35px;
                content: "✔";
            }

        /* Add a red text color and an "x" when the requirements are wrong */
        .invalid {
            color: red;
        }

            .invalid:before {
                position: relative;
                left: -35px;
                content: "✖";
            }
    </style>

</head>
<body @*data-spy="scroll" data-target="#navbar-example"*@>
    <div class="login-area area-padding fix">
        <div class="login-overlay"></div>
        <div class="table">
            <div class="table-cell">
                <div class="container">
                    <div class="row">

                        <br /><br /><br />

                        <div class="col-md-offset-3 col-md-6 col-sm-offset-2 col-sm-8 col-xs-12">
                            <div class="login-form signup-form">
                                <h4 class="login-title text-center">Change Password</h4>

                                <div style="color: #1af2f2; margin-left: -15px;">@TempData["UpdatePass"]</div>
                                <div style="color: red; margin-left: -15px;">@TempData["MatchPwd"]</div>

                                @using (Html.BeginForm("Update_Password", "Home", FormMethod.Post, new { id = "userform" }))
                                {
                                    <div class="row">
                                        <input class="form-control" type="text" id="psw" name="New_name" placeholder="new password" pattern="(?=.*\d)(?=.*[a-z])(?=.*[A-Z]).{8,}" title="Must contain at least one number and one uppercase and lowercase letter, and at least 8 or more characters" required>

                                        <input class="form-control" type="text" id="conf_psw" name="Confirm_name" placeholder="confirm password" pattern="(?=.*\d)(?=.*[a-z])(?=.*[A-Z]).{8,}" title="Must contain at least one number and one uppercase and lowercase letter, and at least 8 or more characters" required>

                                        <div class="col-md-12 col-sm-12 col-xs-12 text-center">
                                            <button class="slide-btn login-btn" type="submit">Change</button>
                                        </div>
                                    </div>
                                }
                            </div>
                        </div>

                        <div id="message">
                            <h6>Password must contain the following:</h6>
                            <p id="letter" class="invalid">A <b>lowercase</b> letter</p>
                            <p id="capital" class="invalid">A <b>capital (uppercase)</b> letter</p>
                            <p id="number" class="invalid">A <b>number</b></p>
                            <p id="length" class="invalid">Minimum <b>8 characters</b></p>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <script src="js/vendor/jquery-1.12.4.min.js"></script>
    <script src="js/bootstrap.min.js"></script>
    <script src="js/form-validator.min.js"></script>
    <script src="js/plugins.js"></script>

    <script src="~/Scripts/jquery.validate.js"></script>
    <script src="~/Scripts/jquery.validate.unobtrusive.js"></script>

    @*Bootstrap Validation*@
    <script>
        var myInput = document.getElementById("psw");
        var myInput2 = document.getElementById("conf_psw");
        var letter = document.getElementById("letter");
        var capital = document.getElementById("capital");
        var number = document.getElementById("number");
        var length = document.getElementById("length");

        // When the user clicks on the password field, show the message box
        myInput.onfocus = function () {
            document.getElementById("message").style.display = "block";
        }

        // When the user clicks outside of the password field, hide the message box
        myInput.onblur = function () {
            document.getElementById("message").style.display = "none";
        }

        // When the user starts to type something inside the password field
        myInput.onkeyup = function () {
            // Validate lowercase letters
            var lowerCaseLetters = /[a-z]/g;
            if (myInput.value.match(lowerCaseLetters)) {
                letter.classList.remove("invalid");
                letter.classList.add("valid");
            } else {
                letter.classList.remove("valid");
                letter.classList.add("invalid");
            }

            // Validate capital letters
            var upperCaseLetters = /[A-Z]/g;
            if (myInput.value.match(upperCaseLetters)) {
                capital.classList.remove("invalid");
                capital.classList.add("valid");
            } else {
                capital.classList.remove("valid");
                capital.classList.add("invalid");
            }

            // Validate numbers
            var numbers = /[0-9]/g;
            if (myInput.value.match(numbers)) {
                number.classList.remove("invalid");
                number.classList.add("valid");
            } else {
                number.classList.remove("valid");
                number.classList.add("invalid");
            }

            // Validate length
            if (myInput.value.length >= 8) {
                length.classList.remove("invalid");
                length.classList.add("valid");
            } else {
                length.classList.remove("valid");
                length.classList.add("invalid");
            }
        }
    </script>

</body>
</html>